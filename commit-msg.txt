feat(bench+aot): integrate AOT backend and unify benchmarks

This commit introduces the first working AOT (ahead-of-time) path
and integrates it into the unified benchmarking toolchain.

Changes:
- Added minimal AOT transpiler and fixed C prologue with explicit
  prototypes for time_ns/print_time_ns (to emit TIME_NS in stdout)
- Deduplicated Makefile targets (bench-fast / bench-plot)
- Kept current repo layout intact to avoid breaking builds
- Ensured CSV/plots are generated consistently

Known limitations / TODO:
- AST parser still fails on ')' (Pratt table to fix)
- BenchFAST uses single-shot; add warm-up and median/p90
- Expand microbench suite beyond Fibonacci

Next steps:
1. Fix Pratt parser table
2. Add warm-up + median/p90 in BenchFAST
3. Add 3â€“5 new tasks (sum_loop, map_count, string_concat, tiny_matmul)
4. Document methodology in README.performance.md

This is a stability-focused refactor to make the pipeline consistent
and ready for public repo consumption.